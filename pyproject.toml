[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "zyte-common-items"
dynamic = ["version"]
description = "Item definitions for Zyte API schema"
readme = { file = "README.rst", content-type = "text/x-rst" }
requires-python = ">=3.9"
authors = [{ name = "Zyte Group Ltd", email = "info@zyte.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "attrs>=22.2.0",
    "clear-html>=0.4.0",
    "itemadapter>=0.8.0",
    "Jinja2>=2.7",
    "price-parser>=0.3.4",
    "web-poet>=0.14.0",
    "zyte-parsers>=0.5.0",
]

[project.urls]
source = "https://github.com/zytedata/zyte-common-items"
issues = "https://github.com/zytedata/zyte-common-items/issues"
documentation = "https://zyte-common-items.readthedocs.io/en/stable/"
changelog = "https://github.com/zytedata/zyte-common-items/blob/main/CHANGELOG.rst"

[tool.setuptools.dynamic]
version = { file = "zyte_common_items/VERSION" }

[tool.setup_tools.package-data]
zyte_common_items = ["py.typed","VERSION"]

[tool.setuptools.packages.find]
include = ["zyte_common_items*"]
namespaces = false

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
warn_no_return = false
exclude = ['test_mypy\.py$', 'test_conversion\.py$']

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:The zyte_common_items.ae module .*:DeprecationWarning',
]

[tool.bumpversion]
current_version = "0.28.0"
commit = true
tag = true
tag_name = "{new_version}"

[[tool.bumpversion.files]]
filename = 'CHANGELOG.rst'
search = "\\(unreleased\\)$"
replace = "({now:%Y-%m-%d})"
regex = true

[[tool.bumpversion.files]]
filename = "zyte_common_items/VERSION"

[tool.ruff.format]
exclude = [
    "tests/test_mypy.py",  # https://github.com/davidfritzsche/pytest-mypy-testing/issues/29
]

[tool.ruff.lint]
extend-select = [
    # flake8-builtins
    "A",
    # flake8-async
    "ASYNC",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-commas
    "COM",
    # pydocstyle
    "D",
    # flake8-future-annotations
    "FA",
    # flynt
    "FLY",
    # refurb
    "FURB",
    # isort
    "I",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-logging
    "LOG",
    # Perflint
    "PERF",
    # pygrep-hooks
    "PGH",
    # flake8-pie
    "PIE",
    # pylint
    "PL",
    # flake8-pytest-style
    "PT",
    # flake8-use-pathlib
    "PTH",
    # flake8-pyi
    "PYI",
    # flake8-quotes
    "Q",
    # flake8-return
    "RET",
    # flake8-raise
    "RSE",
    # Ruff-specific rules
    "RUF",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # flake8-slots
    "SLOT",
    # flake8-debugger
    "T10",
    # flake8-type-checking
    "TC",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
    # pycodestyle warnings
    "W",
    # flake8-2020
    "YTT",
]
ignore = [
    # Trailing comma missing
    "COM812",
    # Missing docstring in public module
    "D100",
    # Missing docstring in public class
    "D101",
    # Missing docstring in public method
    "D102",
    # Missing docstring in public function
    "D103",
    # Missing docstring in public package
    "D104",
    # Missing docstring in magic method
    "D105",
    # Missing docstring in public nested class
    "D106",
    # Missing docstring in __init__
    "D107",
    # One-line docstring should fit on one line with quotes
    "D200",
    # No blank lines allowed after function docstring
    "D202",
    # 1 blank line required between summary line and description
    "D205",
    # Multi-line docstring closing quotes should be on a separate line
    "D209",
    # First line should end with a period
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    # First line should not be the function's "signature"
    "D402",
    # Too many return statements
    "PLR0911",
    # Too many branches
    "PLR0912",
    # Too many arguments in function definition
    "PLR0913",
    # Too many statements
    "PLR0915",
    # Magic value used in comparison
    "PLR2004",
    # String contains ambiguous {}.
    "RUF001",
    # Docstring contains ambiguous {}.
    "RUF002",
    # Comment contains ambiguous {}.
    "RUF003",
    # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF012",
    # Use of `assert` detected
    "S101",
    # Prefer absolute imports over relative imports from parent modules
    "TID252",
    # Add `from __future__ import annotations` to simplify
    # (The fix can break andi.)
    "FA100",
]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-decorators = ["attrs.define"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"zyte_common_items/__init__.py" = ["F401"]
"zyte_common_items/components/__init__.py" = ["F401"]
"zyte_common_items/items/__init__.py" = ["F401"]
"zyte_common_items/pages/__init__.py" = ["F401"]
# Skip PEP 604 suggestions for files with attr classes
"zyte_common_items/components/*.py" = ["UP007"]
"zyte_common_items/items/*.py" = ["UP007"]
# ”module level import not at the top of file“ caused by pytest.importorskip
"tests/test_ae_pipeline.py" = ["E402"]
"tests/test_pipelines.py" = ["E402"]
"tests/*" = ["S", "B018"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
